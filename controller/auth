package controller

import (
	"net/http"
	"os"
	"time"

	"github.com/gin-gonic/gin"
	"github.com/golang-jwt/jwt/v5"
)

type loginBodyT struct {
	Name       string `json:"name" binding:"required"`
	Role       string `json:"role" binding:"required"`
	PhoneNum   string `json:"phoneNum" binding:"required"`
	DriverInfo string `json:"driverInfo"`
}

func (appController *AppController) Login(c *gin.Context) {

	var reqBody loginBodyT
	err := c.BindJSON(&reqBody)

	if err != nil {
		c.JSON(http.StatusInternalServerError, gin.H{"err": err})
		return
	}

	jwtToken := jwt.NewWithClaims(jwt.SigningMethodHS256, jwt.MapClaims{
		"userName": "Justin",
		"exp":      time.Now().Add(time.Second * 20).Unix(),
	})

	tokenString, err := jwtToken.SignedString([]byte(os.Getenv("accessToken")))

	if err != nil {
		c.JSON(http.StatusInternalServerError, gin.H{"err": err})
		return
	}

	c.JSON(http.StatusOK, gin.H{"jwt": tokenString})

	return
}
